# Generated by Django 3.2.8 on 2021-11-01 19:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InteractiveExperienceSurveyTable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('consent_anonymous_quotations', models.TextField()),
                ('experience_date', models.TextField()),
                ('experience_start_time', models.TextField()),
                ('experience_end_time', models.TextField()),
                ('GODSPEED_ANIMACY_Dead_Alive', models.TextField()),
                ('GODSPEED_ANIMACY_Stagnant_Lively', models.TextField()),
                ('GODSPEED_ANIMACY_Mechanical_Organic', models.TextField()),
                ('GODSPEED_ANIMACY_Artificial_Lifelike', models.TextField()),
                ('GODSPEED_ANIMACY_Inert_Interactive', models.TextField()),
                ('GODSPEED_ANIMACY_Apathetic_Responsive', models.TextField()),
                ('GODSPEED_LIKEABILITY_Dislike_Like', models.TextField()),
                ('GODSPEED_LIKEABILITY_Unfriendly_Friendly', models.TextField()),
                ('GODSPEED_LIKEABILITY_Unkind_Kind', models.TextField()),
                ('GODSPEED_LIKEABILITY_Unpleasant_Pleasant', models.TextField()),
                ('GODSPEED_LIKEABILITY_Awful_Nice', models.TextField()),
                ('GODSPEED_PERCEIVEDINTELLIGENCE_Incompetent_Competent', models.TextField()),
                ('GODSPEED_PERCEIVEDINTELLIGENCE_Ignorant_Knowledgeable', models.TextField()),
                ('GODSPEED_PERCEIVEDINTELLIGENCE_Irresponsible_Responsible', models.TextField()),
                ('GODSPEED_PERCEIVEDINTELLIGENCE_Unintelligent_Intelligent', models.TextField()),
                ('GODSPEED_PERCEIVEDINTELLIGENCE_Foolish_Sensible', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q1', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q2', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q3', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q4', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q5', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q6', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q7', models.TextField()),
                ('InteractiveArtIncentivesScale_Emotion_Q8', models.TextField()),
                ('InteractiveArtIncentivesScale_Utility_Q9', models.TextField()),
                ('InteractiveArtIncentivesScale_Utility_Q10', models.TextField()),
                ('InteractiveArtIncentivesScale_Utility_Q11', models.TextField()),
                ('InteractiveArtIncentivesScale_Utility_Q12', models.TextField()),
                ('InteractiveArtIncentivesScale_ArtAppreciation_Q13', models.TextField()),
                ('InteractiveArtIncentivesScale_ArtAppreciation_Q14', models.TextField()),
                ('InteractiveArtIncentivesScale_ArtAppreciation_Q15', models.TextField()),
                ('InteractiveArtIncentivesScale_ArtAppreciation_Q16', models.TextField()),
                ('InteractiveArtIncentivesScale_ArtAppreciation_Q17', models.TextField()),
                ('InteractiveArtIncentivesScale_ArtAppreciation_Q18', models.TextField()),
                ('InteractiveArtIncentivesScale_SocialConnection_Q19', models.TextField()),
                ('InteractiveArtIncentivesScale_SocialConnection_Q20', models.TextField()),
                ('InteractiveArtIncentivesScale_SocialConnection_Q21', models.TextField()),
                ('InteractiveArtSelfEfficacyScale_EaseofInteraction_Q22', models.TextField()),
                ('InteractiveArtSelfEfficacyScale_EaseofInteraction_Q23', models.TextField()),
                ('InteractiveArtSelfEfficacyScale_EaseofInteraction_Q24', models.TextField()),
                ('InteractiveArtSelfEfficacyScale_Application_Q25', models.TextField()),
                ('InteractiveArtSelfEfficacyScale_Application_Q26', models.TextField()),
                ('InteractiveArtSelfEfficacyScale_Application_Q27', models.TextField()),
                ('InteractiveArtUsageIntention_Q28', models.TextField()),
                ('InteractiveArtUsageIntention_Q29', models.TextField()),
                ('InteractiveArtUsageIntention_Q30', models.TextField()),
                ('InteractiveArtUsageIntention_Q31', models.TextField()),
                ('general_comment', models.TextField()),
                ('age', models.TextField()),
                ('gender', models.TextField()),
                ('edu_background', models.TextField()),
                ('prior_experience_robot', models.TextField()),
                ('prior_experience_interactive_art', models.TextField()),
                ('perceive_interactive_art_as_robot', models.TextField()),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'interactive_experience_survey_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PreferenceUserDemographicTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_anonymous_quotations', models.TextField()),
                ('age', models.TextField()),
                ('gender', models.TextField()),
                ('edu_background', models.TextField()),
                ('have_interacted_with_the_sculpture', models.PositiveIntegerField()),
                ('experience_date', models.TextField()),
                ('experience_start_time', models.TextField()),
                ('experience_end_time', models.TextField()),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'preference_user_demographic_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SegmentTable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('seg_exp_start_id', models.PositiveIntegerField()),
                ('seg_exp_end_id', models.PositiveIntegerField()),
                ('sampled_num', models.PositiveIntegerField()),
                ('behavior_mode', models.TextField()),
                ('video_camera_name', models.TextField()),
                ('video_clip_url', models.TextField()),
                ('video_clip_start_time', models.DateTimeField()),
                ('video_clip_end_time', models.DateTimeField()),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'segment_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PreferenceTable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pref_choice', models.TextField()),
                ('pref_label', models.PositiveIntegerField()),
                ('time_spend_for_labeling', models.FloatField()),
                ('train_set', models.PositiveIntegerField()),
                ('sampled_num', models.PositiveIntegerField()),
                ('create_time', models.DateTimeField()),
                ('seg_1_id', models.ForeignKey(db_column='seg_1_id', on_delete=django.db.models.deletion.CASCADE, related_name='seg_1_id', to='app_teacher_preference.segmenttable')),
                ('seg_2_id', models.ForeignKey(db_column='seg_2_id', on_delete=django.db.models.deletion.CASCADE, related_name='seg_2_id', to='app_teacher_preference.segmenttable')),
                ('teacher_id', models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.CASCADE, to='app_teacher_preference.preferenceuserdemographictable')),
            ],
            options={
                'db_table': 'preference_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PreferenceSurveyTable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('SUS_Q1', models.TextField()),
                ('SUS_Q2', models.TextField()),
                ('SUS_Q3', models.TextField()),
                ('SUS_Q4', models.TextField()),
                ('SUS_Q5', models.TextField()),
                ('SUS_Q6', models.TextField()),
                ('SUS_Q7', models.TextField()),
                ('SUS_Q8', models.TextField()),
                ('SUS_Q9', models.TextField()),
                ('SUS_Q10', models.TextField()),
                ('Emotion_Q1', models.TextField()),
                ('Emotion_Q2', models.TextField()),
                ('Emotion_Q3', models.TextField()),
                ('Emotion_Q4', models.TextField()),
                ('Emotion_Q5', models.TextField()),
                ('Emotion_Q6', models.TextField()),
                ('Utility_Q1', models.TextField()),
                ('Utility_Q2', models.TextField()),
                ('Utility_Q3', models.TextField()),
                ('Utility_Q4', models.TextField()),
                ('Social_Connection_Q1', models.TextField()),
                ('Social_Connection_Q2', models.TextField()),
                ('Social_Connection_Q3', models.TextField()),
                ('Social_Connection_Q4', models.TextField()),
                ('best_way_to_teach', models.TextField()),
                ('reason_for_choice', models.TextField()),
                ('general_comment', models.TextField()),
                ('create_time', models.DateTimeField()),
                ('teacher_id', models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.CASCADE, to='app_teacher_preference.preferenceuserdemographictable')),
            ],
            options={
                'db_table': 'preference_survey_table',
                'managed': True,
            },
        ),
    ]
